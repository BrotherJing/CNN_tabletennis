name: "CaffeNet"
layer {
  name: "data"
  type: "Data"
  top: "data"
  include {
    phase: TRAIN
  }
  transform_param {
    mean_file: "data/mean.binaryproto"
  }
  data_param {
    #source: "data/train_data_lmdb"
    source: "/media/jing/0C4F0EAC0C4F0EAC/project/tabletennis/train_regress_data_lmdb"
    batch_size: 4
    backend: LMDB
  }
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  include {
    phase: TEST
  }
  transform_param {
    mean_file: "data/mean.binaryproto"
  }
  data_param {
    source: "/media/jing/0C4F0EAC0C4F0EAC/project/tabletennis/val_regress_data_lmdb"
    batch_size: 4
    backend: LMDB
  }
}
layer {
  name: "my_bbox_label"
  type: "Data"
  top: "my_bbox_label"
  include {
    phase: TRAIN
  }
  #transform_param {
  #  scale: 0.004405286
  #}
  data_param {
    source: "/media/jing/0C4F0EAC0C4F0EAC/project/tabletennis/train_regress_label_lmdb"
    batch_size: 4
    backend: LMDB
  }
}
layer {
  name: "my_bbox_label"
  type: "Data"
  top: "my_bbox_label"
  include {
    phase: TEST
  }
  #transform_param {
  #  scale: 0.004405286
  #}
  data_param {
    source: "/media/jing/0C4F0EAC0C4F0EAC/project/tabletennis/val_regress_label_lmdb"
    batch_size: 4
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "SPP"
  bottom: "conv5"
  top: "pool5"
  spp_param {
    pool: MAX
    pyramid_height: 2
  }
}
layer {
  name: "sodlt_fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "sodlt_fc6"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "sodlt_fc6"
  top: "sodlt_fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "sodlt_fc6"
  top: "sodlt_fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "sodlt_fc7"
  type: "InnerProduct"
  bottom: "sodlt_fc6"
  top: "sodlt_fc7"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "sodlt_fc7"
  top: "sodlt_fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "sodlt_fc7"
  top: "sodlt_fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "sodlt_fc8"
  type: "InnerProduct"
  bottom: "sodlt_fc7"
  top: "sodlt_fc8"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "sodlt"
  type: "Reshape"
  bottom: "sodlt_fc8"
  top: "sodlt"
  reshape_param{
    shape{
      dim: 0
      dim: 1
      dim: 50
      dim: -1
    }
  }
}
layer {
  name: "sodlt_norm"
  type: "Sigmoid"
  bottom: "sodlt"
  top: "sodlt_norm"
}
layer{
  type: "Python"
  name: "cut_roi"
  top: "roi"
  #top: "prob_max"
  bottom: "sodlt_norm"
  python_param{
    module: "cut_roi_layer.layer"
    layer: "CutROILayer"
  }
}
layer{
  type: "ROIPooling"
  name: "roi_pool"
  bottom: "conv1"
  bottom: "roi"
  top: "roi_pool"
  roi_pooling_param{
    pooled_w: 7
    pooled_h: 7
    spatial_scale: 0.46 #23/50
  }
}
layer {
  name: "regress_fc6"
  type: "InnerProduct"
  bottom: "roi_pool"
  top: "regress_fc6"
  param {
    lr_mult: 5
    decay_mult: 1
  }
  param {
    lr_mult: 10
    decay_mult: 1
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "regress_relu6"
  type: "ReLU"
  bottom: "regress_fc6"
  top: "regress_fc6"
}
layer {
  name: "regress_drop6"
  type: "Dropout"
  bottom: "regress_fc6"
  top: "regress_fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "regress_fc7"
  type: "InnerProduct"
  bottom: "regress_fc6"
  top: "regress_fc7"
  param {
    lr_mult: 5
    decay_mult: 1
  }
  param {
    lr_mult: 10
    decay_mult: 1
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "regress_relu7"
  type: "ReLU"
  bottom: "regress_fc7"
  top: "regress_fc7"
}
layer {
  name: "regress_drop7"
  type: "Dropout"
  bottom: "regress_fc7"
  top: "regress_fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "regress_fc8"
  type: "InnerProduct"
  bottom: "regress_fc7"
  top: "regress_fc8"
  param {
    lr_mult: 5
    decay_mult: 1
  }
  param {
    lr_mult: 10
    decay_mult: 1
  }
  inner_product_param {
    num_output: 4
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer{
  name: "bbox_gt"
  bottom: "roi"
  bottom: "my_bbox_label"
  top: "bbox_gt"
  type: "Python"
  python_param{
    module: "cut_roi_layer.bbox_transform_layer"
    layer: "BBoxTransformLayer"
  }
}
layer{
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "regress_fc8"
  bottom: "bbox_gt"
  top: "loss_bbox"
  loss_weight: 1
}